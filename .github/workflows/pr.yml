name: PR Build Check

on:
  pull_request:
jobs:
  site:
    name: Build Website
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: ./.github/actions/dev-tool-python
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: python3 -m pip install -r ./site/requirements.txt
      - name: Generate Static Site
        run: mkdocs build
        working-directory: ./site
  proto-format-check:
    name: Check Protobuf Style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: jidicula/clang-format-action@v4.3.1
        with:
          clang-format-version: '13'
          check-path: binary
  proto:
    name: Check Protobuf
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
      - name: Compile protobuf
        run: |
          set -e

          for i in $(ls);
          do
            protoc --proto_path=. --java_out . $i
          done
          set +e
        working-directory: ./binary
  yamllint:
    name: Lint YAML extensions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run yamllint
        run: yamllint .
  yamlvalidate:
    name: Validate YAML extensions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: npm install -g ajv-cli
      - run: |
          set -euo pipefail
          for i in $(ls);
          do
            ajv validate -s ../text/simple_extensions_schema.yaml --strict=true --spec=draft2020 -d "$i"
          done
        working-directory: ./extensions
