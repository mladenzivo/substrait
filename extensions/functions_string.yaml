%YAML 1.2
---
scalar_functions:
  -
    name: concat
    description: Concatenate strings.
    impls:
      - args:
          - value: "varchar<L1>"
            name: "input"
        variadic:
          min: 1
        return: "varchar<L1>"
      - args:
          - value: "string"
            name: "input"
        variadic:
          min: 1
        return: "string"
  -
    name: like
    description: >-
      Are two strings like each other.

      The `case_sensitivity` option applies to the `match` argument.
    impls:
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "varchar<L1>"
            name: "input"
            description: The input string.
          - value: "varchar<L2>"
            name: "match"
            description: The string to match against the input string.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "string"
            name: "input"
            description: The input string.
          - value: "string"
            name: "match"
            description: The string to match against the input string.
        return: "BOOLEAN"
  -
    name: substring
    description: >-
      Extract a substring of a specified `length` starting from position `start`.
      A `start` value of 1 refers to the first characters of the string.
    impls:
      - args:
          - value: "varchar<L1>"
            name: "input"
          - value: i32
            name: "start"
          - value: i32
            name: "length"
        return: "varchar<L1>"
      - args:
          - value: "string"
            name: "input"
          - value: i32
            name: "start"
          - value: i32
            name: "length"
        return: "string"
      - args:
          - value: "fixedchar<l1>"
            name: "input"
          - value: i32
            name: "start"
          - value: i32
            name: "length"
        return: "string"
  -
    name: starts_with
    description: >-
      Whether the `input` string starts with the `substring`.

      The `case_sensitivity` option applies to the `substring` argument.
    impls:
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "varchar<L1>"
            name: "input"
            description: The input string.
          - value: "varchar<L2>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "varchar<L1>"
            name: "input"
            description: The input string.
          - value: "string"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "varchar<L1>"
            name: "input"
            description: The input string.
          - value: "fixedchar<L2>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "string"
            name: "input"
            description: The input string.
          - value: "string"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "string"
            name: "input"
            description: The input string.
          - value: "varchar<L1>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "string"
            name: "input"
            description: The input string.
          - value: "fixedchar<L1>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "fixedchar<L1>"
            name: "input"
            description: The input string.
          - value: "fixedchar<L2>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "fixedchar<L1>"
            name: "input"
            description: The input string.
          - value: "string"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "fixedchar<L1>"
            name: "input"
            description: The input string.
          - value: "varchar<L2>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
  -
    name: ends_with
    description: >-
      Whether `input` string ends with the substring.

      The `case_sensitivity` option applies to the `substring` argument.
    impls:
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "varchar<L1>"
            name: "input"
            description: The input string.
          - value: "varchar<L2>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "varchar<L1>"
            name: "input"
            description: The input string.
          - value: "string"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "varchar<L1>"
            name: "input"
            description: The input string.
          - value: "fixedchar<L2>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "string"
            name: "input"
            description: The input string.
          - value: "string"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "string"
            name: "input"
            description: The input string.
          - value: "varchar<L1>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "string"
            name: "input"
            description: The input string.
          - value: "fixedchar<L1>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "fixedchar<L1>"
            name: "input"
            description: The input string.
          - value: "fixedchar<L2>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "fixedchar<L1>"
            name: "input"
            description: The input string.
          - value: "string"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "fixedchar<L1>"
            name: "input"
            description: The input string.
          - value: "varchar<L2>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
  -
    name: contains
    description: >-
      Whether the `input` string contains the `substring`.

      The `case_sensitivity` option applies to the `substring` argument.
    impls:
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "varchar<L1>"
            name: "input"
            description: The input string.
          - value: "varchar<L2>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "varchar<L1>"
            name: "input"
            description: The input string.
          - value: "string"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "varchar<L1>"
            name: "input"
            description: The input string.
          - value: "fixedchar<L2>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "string"
            name: "input"
            description: The input string.
          - value: "string"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "string"
            name: "input"
            description: The input string.
          - value: "varchar<L1>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "string"
            name: "input"
            description: The input string.
          - value: "fixedchar<L1>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "fixedchar<L1>"
            name: "input"
            description: The input string.
          - value: "fixedchar<L2>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "fixedchar<L1>"
            name: "input"
            description: The input string.
          - value: "string"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "fixedchar<L1>"
            name: "input"
            description: The input string.
          - value: "varchar<L2>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
  -
    name: strpos
    description: >-
      Return the position of the first occurrence of a string in another string. The first
      character of the string is at position 1. If no occurrence is found, 0 is returned.

      The `case_sensitivity` option applies to the `substring` argument.
    impls:
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "string"
            name: "input"
            description: The input string.
          - value: "string"
            name: "substring"
            description: The substring to search for.
        return: i64
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "varchar<L1>"
            name: "input"
            description: The input string.
          - value: "varchar<L1>"
            name: "substring"
            description: The substring to search for.
        return: i64
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "fixedchar<L1>"
            name: "input"
            description: The input string.
          - value: "fixedchar<L2>"
            name: "substring"
            description: The substring to search for.
        return: i64
  -
    name: count_substring
    description: >-
      Return the number of non-overlapping occurrences of a substring in an input string.

      The `case_sensitivity` option applies to the `substring` argument.
    impls:
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "string"
            name: "input"
            description: The input string.
          - value: "string"
            name: "substring"
            description: The substring to count.
        return: i64
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "varchar<L1>"
            name: "input"
            description: The input string.
          - value: "varchar<L2>"
            name: "substring"
            description: The substring to count.
        return: i64
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "fixedchar<L1>"
            name: "input"
            description: The input string.
          - value: "fixedchar<L2>"
            name: "substring"
            description: The substring to count.
        return: i64
  -
    name: replace
    description: >-
      Replace all occurrences of the substring with the replacement string.

      The `case_sensitivity` option applies to the `substring` argument.
    impls:
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "string"
            name: "input"
            description: Input string.
          - value: "string"
            name: "substring"
            description: The substring to replace.
          - value: "string"
            name: "replacement"
            description: The replacement string.
        return: "string"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "varchar<L1>"
            name: "input"
            description: Input string.
          - value: "varchar<L2>"
            name: "substring"
            description: The substring to replace.
          - value: "varchar<L3>"
            name: "replacement"
            description: The replacement string.
        return: "varchar<L1>"
  -
    name: concat_ws
    description: Concatenate strings together separated by a separator.
    impls:
      - args:
          - value: "string"
            name: "separator"
            description: Character to separate strings by.
          - value: "string"
            name: "string_arguments"
            description: Strings to be concatenated.
        variadic:
          min: 1
        return: "string"
      - args:
          - value: "varchar<L2>"
            name: "separator"
            description: Character to separate strings by.
          - value: "varchar<L1>"
            name: "string_arguments"
            description: Strings to be concatenated.
        variadic:
          min: 1
        return: "varchar<L1>"
  -
    name: repeat
    description: Repeat a string `count` number of times.
    impls:
      - args:
          - value: "string"
            name: "input"
          - value: i64
            name: "count"
        return: "string"
      - args:
          - value: "varchar<L1>"
          - value: i64
            name: "input"
          - value: i64
            name: "count"
        return: "varchar<L1>"
  -
    name: reverse
    description: Returns the string in reverse order.
    impls:
      - args:
          - value: "string"
            name: "input"
        return: "string"
      - args:
          - value: "varchar<L1>"
            name: "input"
        return: "varchar<L1>"
      - args:
          - value: "fixedchar<L1>"
            name: "input"
        return: "fixedchar<L1>"
  -
    name: replace_slice
    description: >-
      Replace a slice of the input string.  A specified 'length' of characters will be deleted from
      the input string beginning at the 'start' position and will be replaced by a new string.  A
      start value of 1 indicates the first character of the input string. If start is negative
      or zero, or greater than the length of the input string, a null string is returned. If 'length'
      is negative, a null string is returned.  If 'length' is zero, inserting of the new string
      occurs at the specified 'start' position and no characters are deleted. If 'length' is
      greater than the input string, deletion will occur up to the last character of the input string.
    impls:
      - args:
          - value: "string"
            name: "input"
            description: Input string.
          - value: i64
            name: "start"
            description: The position in the string to start deleting/inserting characters.
          - value: i64
            name: "length"
            description: The number of characters to delete from the input string.
          - value: "string"
            name: "replacement"
            description: The new string to insert at the start position.
        return: "string"
      - args:
          - value: "varchar<L1>"
            name: "input"
            description: Input string.
          - value: i64
            name: "start"
            description: The position in the string to start deleting/inserting characters.
          - value: i64
            name: "length"
            description: The number of characters to delete from the input string.
          - value: "varchar<L2>"
            name: "replacement"
            description: The new string to insert at the start position.
        return: "varchar<L1>"
  -
    name: lower
    description: >-
      Transform the string to lower case characters. Implementation should follow the utf8_unicode_ci
      collations according to the Unicode Collation Algorithm described at http://www.unicode.org/reports/tr10/.
    impls:
      - args:
          - name: char_set
            options: [ UTF8, ASCII_ONLY ]
            required: false
          - value: "string"
            name: "input"
        return: "string"
      - args:
          - name: char_set
            options: [ UTF8, ASCII_ONLY ]
            required: false
          - value: "varchar<L1>"
            name: "input"
        return: "varchar<L1>"
      - args:
          - name: char_set
            options: [ UTF8, ASCII_ONLY ]
            required: false
          - value: "fixedchar<L1>"
            name: "input"
        return: "fixedchar<L1>"
  -
    name: upper
    description: >-
      Transform the string to upper case characters. Implementation should follow the utf8_unicode_ci
      collations according to the Unicode Collation Algorithm described at http://www.unicode.org/reports/tr10/.
    impls:
      - args:
          - name: char_set
            options: [ UTF8, ASCII_ONLY ]
            required: false
          - value: "string"
            name: "input"
        return: "string"
      - args:
          - name: char_set
            options: [ UTF8, ASCII_ONLY ]
            required: false
          - value: "varchar<L1>"
            name: "input"
        return: "varchar<L1>"
      - args:
          - name: char_set
            options: [ UTF8, ASCII_ONLY ]
            required: false
          - value: "fixedchar<L1>"
            name: "input"
        return: "fixedchar<L1>"
  -
    name: swapcase
    description: >-
      Transform the string's lowercase characters to uppercase and uppercase characters to
      lowercase. Implementation should follow the utf8_unicode_ci collations according to the
      Unicode Collation Algorithm described at http://www.unicode.org/reports/tr10/.
    impls:
      - args:
          - name: char_set
            options: [ UTF8, ASCII_ONLY ]
            required: false
          - value: "string"
            name: "input"
        return: "string"
      - args:
          - name: char_set
            options: [ UTF8, ASCII_ONLY ]
            required: false
          - value: "varchar<L1>"
            name: "input"
        return: "varchar<L1>"
      - args:
          - name: char_set
            options: [ UTF8, ASCII_ONLY ]
            required: false
          - value: "fixedchar<L1>"
            name: "input"
        return: "fixedchar<L1>"
  -
    name: capitalize
    description: >-
      Capitalize the first character of the input string. Implementation should follow the
      utf8_unicode_ci collations according to the Unicode Collation Algorithm described at
      http://www.unicode.org/reports/tr10/.
    impls:
      - args:
          - name: char_set
            options: [ UTF8, ASCII_ONLY ]
            required: false
          - value: "string"
            name: "input"
        return: "string"
      - args:
          - name: char_set
            options: [ UTF8, ASCII_ONLY ]
            required: false
          - value: "varchar<L1>"
            name: "input"
        return: "varchar<L1>"
      - args:
          - name: char_set
            options: [ UTF8, ASCII_ONLY ]
            required: false
          - value: "fixedchar<L1>"
            name: "input"
        return: "fixedchar<L1>"
  -
    name: title
    description: >-
      Converts the input string into titlecase. Capitalize the first character of each word in the
      input string except for articles (a, an, the). Implementation should follow the
      utf8_unicode_ci collations according to the Unicode Collation Algorithm described at
      http://www.unicode.org/reports/tr10/.
    impls:
      - args:
          - name: char_set
            options: [ UTF8, ASCII_ONLY ]
            required: false
          - value: "string"
            name: "input"
        return: "string"
      - args:
          - name: char_set
            options: [ UTF8, ASCII_ONLY ]
            required: false
          - value: "varchar<L1>"
            name: "input"
        return: "varchar<L1>"
      - args:
          - name: char_set
            options: [ UTF8, ASCII_ONLY ]
            required: false
          - value: "fixedchar<L1>"
            name: "input"
        return: "fixedchar<L1>"
  -
    name: char_length
    description: >-
      Return the number of characters in the input string.  The length includes trailing spaces.
    impls:
      - args:
          - value: "string"
            name: "input"
        return: i64
      - args:
          - value: "varchar<L1>"
            name: "input"
        return: i64
      - args:
          - value: "fixedchar<L1>"
            name: "input"
        return: i64
  -
    name: bit_length
    description: Return the number of bits in the input string.
    impls:
      - args:
          - value: "string"
            name: "input"
        return: i64
      - args:
          - value: "varchar<L1>"
            name: "input"
        return: i64
      - args:
          - value: "fixedchar<L1>"
            name: "input"
        return: i64
  -
    name: octet_length
    description: Return the number of bytes in the input string.
    impls:
      - args:
          - value: "string"
            name: "input"
        return: i64
      - args:
          - value: "varchar<L1>"
            name: "input"
        return: i64
      - args:
          - value: "fixedchar<L1>"
            name: "input"
        return: i64
  -
    name: ltrim
    description: >-
      Remove any occurrence of the characters from the left side of the string.
      If no characters are specified, spaces are removed.
    impls:
      - args:
          - value: "varchar<L1>"
            name: "input"
            description: "The string to remove characters from."
          - value: "varchar<L2>"
            name: "characters"
            description: "The set of characters to remove."
        return: "varchar<L1>"
      - args:
          - value: "string"
            name: "input"
            description: "The string to remove characters from."
          - value: "string"
            name: "characters"
            description: "The set of characters to remove."
        return: "string"
  -
    name: rtrim
    description: >-
      Remove any occurrence of the characters from the right side of the string.
      If no characters are specified, spaces are removed.
    impls:
      - args:
          - value: "varchar<L1>"
            name: "input"
            description: "The string to remove characters from."
          - value: "varchar<L2>"
            name: "characters"
            description: "The set of characters to remove."
        return: "varchar<L1>"
      - args:
          - value: "string"
            name: "input"
            description: "The string to remove characters from."
          - value: "string"
            name: "characters"
            description: "The set of characters to remove."
        return: "string"
  -
    name: trim
    description: >-
      Remove any occurrence of the characters from the left and right sides of
      the string. If no characters are specified, spaces are removed.
    impls:
      - args:
          - value: "varchar<L1>"
            name: "input"
            description: "The string to remove characters from."
          - value: "varchar<L2>"
            name: "characters"
            description: "The set of characters to remove."
        return: "varchar<L1>"
      - args:
          - value: "string"
            name: "input"
            description: "The string to remove characters from."
          - value: "string"
            name: "characters"
            description: "The set of characters to remove."
        return: "string"
  -
    name: lpad
    description: >-
      Left-pad the input string with the string of 'characters' until the specified length of the
      string has been reached. If the input string is longer than 'length', remove characters from
      the right-side to shorten it to 'length' characters. If the string of 'characters' is longer
      than the remaining 'length' needed to be filled, only pad until 'length' has been reached.
      If 'characters' is not specified, the default value is a single space.
    impls:
      - args:
          - value: "varchar<L1>"
            name: "input"
            description: "The string to pad."
          - value: i32
            name: "length"
            description: "The length of the output string."
          - value: "varchar<L2>"
            name: "characters"
            description: "The string of characters to use for padding."
        return: "varchar<L1>"
      - args:
          - value: "string"
            name: "input"
            description: "The string to pad."
          - value: i32
            name: "length"
            description: "The length of the output string."
          - value: "string"
            name: "characters"
            description: "The string of characters to use for padding."
        return: "string"
  -
    name: rpad
    description: >-
      Right-pad the input string with the string of 'characters' until the specified length of the
      string has been reached. If the input string is longer than 'length', remove characters from
      the left-side to shorten it to 'length' characters. If the string of 'characters' is longer
      than the remaining 'length' needed to be filled, only pad until 'length' has been reached.
      If 'characters' is not specified, the default value is a single space.
    impls:
      - args:
          - value: "varchar<L1>"
            name: "input"
            description: "The string to pad."
          - value: i32
            name: "length"
            description: "The length of the output string."
          - value: "varchar<L2>"
            name: "characters"
            description: "The string of characters to use for padding."
        return: "varchar<L1>"
      - args:
          - value: "string"
            name: "input"
            description: "The string to pad."
          - value: i32
            name: "length"
            description: "The length of the output string."
          - value: "string"
            name: "characters"
            description: "The string of characters to use for padding."
        return: "string"
  -
    name: left
    description: Extract `count` characters starting from the left of the string.
    impls:
      - args:
          - value: "varchar<L1>"
            name: "input"
          - value: i32
            name: "count"
        return: "varchar<L1>"
      - args:
          - value: "string"
            name: "input"
          - value: i32
            name: "count"
        return: "string"
  -
    name: right
    description: Extract `count` characters starting from the right of the string.
    impls:
      - args:
          - value: "varchar<L1>"
            name: "input"
          - value: i32
            name: "count"
        return: "varchar<L1>"
      - args:
          - value: "string"
            name: "input"
          - value: i32
            name: "count"
        return: "string"
