%YAML 1.2
---
scalar_functions:
  -
    name: concat
    description: Concatenate two strings
    impls:
      - args:
          - value: "varchar<L1>"
          - value: "varchar<L2>"
        return: "varchar<L1 + L2>"
      - args:
          - value: "string"
          - value: "string"
        return: "string"
  -
    name: like
    description: >-
      Are two strings like each other.

      The `case_sensitivity` option applies to the `match` argument.
    impls:
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "varchar<L1>"
            name: "input"
            description: The input string.
          - value: "varchar<L2>"
            name: "match"
            description: The string to match against the input string.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "string"
            name: "input"
            description: The input string.
          - value: "string"
            name: "match"
            description: The string to match against the input string.
        return: "BOOLEAN"
  -
    name: substring
    description: >-
      Extract a substring of a specified length starting from position start.
      A start value of 1 refers to the first characters of the string.
    impls:
      - args:
          - value: "varchar<L1>"
          - value: i32
          - value: i32
        return: "varchar<L1>"
      - args:
          - value: "string"
          - value: i32
          - value: i32
        return: "string"
      - args:
          - value: "fixedchar<l1>"
          - value: i32
          - value: i32
        return: "string"
  -
    name: starts_with
    description: >-
      Whether the `input` string starts with the `substring`.

      The `case_sensitivity` option applies to the `substring` argument.
    impls:
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "varchar<L1>"
            name: "input"
            description: The input string.
          - value: "varchar<L2>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "varchar<L1>"
            name: "input"
            description: The input string.
          - value: "string"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "varchar<L1>"
            name: "input"
            description: The input string.
          - value: "fixedchar<L2>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "string"
            name: "input"
            description: The input string.
          - value: "string"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "string"
            name: "input"
            description: The input string.
          - value: "varchar<L1>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "string"
            name: "input"
            description: The input string.
          - value: "fixedchar<L1>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "fixedchar<L1>"
            name: "input"
            description: The input string.
          - value: "fixedchar<L2>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "fixedchar<L1>"
            name: "input"
            description: The input string.
          - value: "string"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "fixedchar<L1>"
            name: "input"
            description: The input string.
          - value: "varchar<L2>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
  -
    name: ends_with
    description: >-
      Whether `input` string ends with the substring.

      The `case_sensitivity` option applies to the `substring` argument.
    impls:
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "varchar<L1>"
            name: "input"
            description: The input string.
          - value: "varchar<L2>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "varchar<L1>"
            name: "input"
            description: The input string.
          - value: "string"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "varchar<L1>"
            name: "input"
            description: The input string.
          - value: "fixedchar<L2>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "string"
            name: "input"
            description: The input string.
          - value: "string"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "string"
            name: "input"
            description: The input string.
          - value: "varchar<L1>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "string"
            name: "input"
            description: The input string.
          - value: "fixedchar<L1>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "fixedchar<L1>"
            name: "input"
            description: The input string.
          - value: "fixedchar<L2>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "fixedchar<L1>"
            name: "input"
            description: The input string.
          - value: "string"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "fixedchar<L1>"
            name: "input"
            description: The input string.
          - value: "varchar<L2>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
  -
    name: contains
    description: >-
      Whether the `input` string contains the `substring`.

      The `case_sensitivity` option applies to the `substring` argument.
    impls:
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "varchar<L1>"
            name: "input"
            description: The input string.
          - value: "varchar<L2>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "varchar<L1>"
            name: "input"
            description: The input string.
          - value: "string"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "varchar<L1>"
            name: "input"
            description: The input string.
          - value: "fixedchar<L2>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "string"
            name: "input"
            description: The input string.
          - value: "string"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "string"
            name: "input"
            description: The input string.
          - value: "varchar<L1>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "string"
            name: "input"
            description: The input string.
          - value: "fixedchar<L1>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "fixedchar<L1>"
            name: "input"
            description: The input string.
          - value: "fixedchar<L2>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "fixedchar<L1>"
            name: "input"
            description: The input string.
          - value: "string"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "fixedchar<L1>"
            name: "input"
            description: The input string.
          - value: "varchar<L2>"
            name: "substring"
            description: The substring to search for.
        return: "BOOLEAN"
  -
    name: strpos
    description: >-
      Return the position of the first occurrence of a string in another string. The first
      character of the string is at position 1. If no occurrence is found, 0 is returned.

      The `case_sensitivity` option applies to the `substring` argument.
    impls:
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "string"
            name: "input"
            description: The input string.
          - value: "string"
            name: "substring"
            description: The substring to search for.
        return: i64
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "varchar<L1>"
            name: "input"
            description: The input string.
          - value: "varchar<L1>"
            name: "substring"
            description: The substring to search for.
        return: i64
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "fixedchar<L1>"
            name: "input"
            description: The input string.
          - value: "fixedchar<L2>"
            name: "substring"
            description: The substring to search for.
        return: i64
  -
    name: count_substring
    description: >-
      Return the number of non-overlapping occurrences of a substring in an input string.

      The `case_sensitivity` option applies to the `substring` argument.
    impls:
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "string"
            name: "input"
            description: The input string.
          - value: "string"
            name: "substring"
            description: The substring to count.
        return: i64
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "varchar<L1>"
            name: "input"
            description: The input string.
          - value: "varchar<L2>"
            name: "substring"
            description: The substring to count.
        return: i64
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "fixedchar<L1>"
            name: "input"
            description: The input string.
          - value: "fixedchar<L2>"
            name: "substring"
            description: The substring to count.
        return: i64
  -
    name: replace
    description: >-
      Replace all occurrences of the substring with the replacement string.

      The `case_sensitivity` option applies to the `substring` argument.
    impls:
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "string"
            name: "input"
            description: Input string.
          - value: "string"
            name: "substring"
            description: The substring to replace.
          - value: "string"
            name: "replacement"
            description: The replacement string.
        return: "string"
      - args:
          - name: case_sensitivity
            options: [ CASE_SENSITIVE, CASE_INSENSITIVE ]
            required: false
          - value: "varchar<L1>"
            name: "input"
            description: Input string.
          - value: "varchar<L2>"
            name: "substring"
            description: The substring to replace.
          - value: "varchar<L3>"
            name: "replacement"
            description: The replacement string.
        return: "varchar<L1>"
  -
    name: ltrim
    description: >-
      Remove any occurrence of the characters from the left side of the string.
      If no characters are specified, spaces are removed.
    impls:
      - args:
          - value: "varchar<L1>"
            name: "input"
            description: "The string to remove characters from."
          - value: "varchar<L2>"
            name: "characters"
            description: "The set of characters to remove."
        return: "varchar<L1>"
      - args:
          - value: "string"
            name: "input"
            description: "The string to remove characters from."
          - value: "string"
            name: "characters"
            description: "The set of characters to remove."
        return: "string"
  -
    name: rtrim
    description: >-
      Remove any occurrence of the characters from the right side of the string.
      If no characters are specified, spaces are removed.
    impls:
      - args:
          - value: "varchar<L1>"
            name: "input"
            description: "The string to remove characters from."
          - value: "varchar<L2>"
            name: "characters"
            description: "The set of characters to remove."
        return: "varchar<L1>"
      - args:
          - value: "string"
            name: "input"
            description: "The string to remove characters from."
          - value: "string"
            name: "characters"
            description: "The set of characters to remove."
        return: "string"
  -
    name: trim
    description: >-
      Remove any occurrence of the characters from the left and right sides of
      the string. If no characters are specified, spaces are removed.
    impls:
      - args:
          - value: "varchar<L1>"
            name: "input"
            description: "The string to remove characters from."
          - value: "varchar<L2>"
            name: "characters"
            description: "The set of characters to remove."
        return: "varchar<L1>"
      - args:
          - value: "string"
            name: "input"
            description: "The string to remove characters from."
          - value: "string"
            name: "characters"
            description: "The set of characters to remove."
        return: "string"
  -
    name: lpad
    description: >-
      Left-pad the input string with the string of 'characters' until the specified length of the
      string has been reached. If the input string is longer than 'length', remove characters from
      the right-side to shorten it to 'length' characters. If the string of 'characters' is longer
      than the remaining 'length' needed to be filled, only pad until 'length' has been reached.
      If 'characters' is not specified, the default value is a single space.
    impls:
      - args:
          - value: "varchar<L1>"
            name: "input"
            description: "The string to pad."
          - value: i32
            name: "length"
            description: "The length of the output string."
          - value: "varchar<L2>"
            name: "characters"
            description: "The string of characters to use for padding."
        return: "varchar<L1>"
      - args:
          - value: "string"
            name: "input"
            description: "The string to pad."
          - value: i32
            name: "length"
            description: "The length of the output string."
          - value: "string"
            name: "characters"
            description: "The string of characters to use for padding."
        return: "string"
  -
    name: rpad
    description: >-
      Right-pad the input string with the string of 'characters' until the specified length of the
      string has been reached. If the input string is longer than 'length', remove characters from
      the left-side to shorten it to 'length' characters. If the string of 'characters' is longer
      than the remaining 'length' needed to be filled, only pad until 'length' has been reached.
      If 'characters' is not specified, the default value is a single space.
    impls:
      - args:
          - value: "varchar<L1>"
            name: "input"
            description: "The string to pad."
          - value: i32
            name: "length"
            description: "The length of the output string."
          - value: "varchar<L2>"
            name: "characters"
            description: "The string of characters to use for padding."
        return: "varchar<L1>"
      - args:
          - value: "string"
            name: "input"
            description: "The string to pad."
          - value: i32
            name: "length"
            description: "The length of the output string."
          - value: "string"
            name: "characters"
            description: "The string of characters to use for padding."
        return: "string"
  -
    name: left
    description: Extract count characters starting from the left of the string.
    impls:
      - args:
          - value: "varchar<L1>"
          - value: i32
        return: "varchar<L1>"
      - args:
          - value: "string"
          - value: i32
        return: "string"
  -
    name: right
    description: Extract count characters starting from the right of the string.
    impls:
      - args:
          - value: "varchar<L1>"
          - value: i32
        return: "varchar<L1>"
      - args:
          - value: "string"
          - value: i32
        return: "string"
